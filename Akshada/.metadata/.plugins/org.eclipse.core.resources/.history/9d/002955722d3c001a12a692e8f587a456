package Com.BridgeLabz.Fellowship.Oops.AdressBook;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;


//import com.sun.org.apache.xml.internal.utils.AttList;


public class AdressBookImplementation
{
	static Scanner scan=new Scanner(System.in);
 static	FileWriter fw;
  static String current_File;

  public static void createNewFile()
  {
	  System.out.println("enter the file name ");
	  String new_file=scan.next();
	  current_File=AdressUtility.getCurrentPath(new_file);
	   System.out.println(current_File);
	  // String current=
	
	  
  }
  public static boolean CreateNewFile(String current_File) throws IOException
  {
	 File file=new File(current_File);

		int flag = 0;
		boolean b1 = file.exists();
		if (b1)
		{
	System.out.println("File is Already Exist...please Enter another name");
			flag = 0;
		} else {
			boolean b2 = file.createNewFile();
			if (b2) {
				fw = new FileWriter(file);
				fw.write("[ ]");
				fw.flush();
				fw.close();
          System.out.println("New Address Book has Created....");
				flag = 1;
			}
		}
		if (flag == 1) {
			return true;
		} else {
			return false;
		}
	}

  public static void open() throws IOException {
	  Bookmain bookfile = new  Bookmain();
	  BookImplementation b2=new BookImplementation();
//AttList<File>openFile=displayopenFiles();
	ArrayList<File>  openfile = displayOpenFiles();

		System.out.println("\n\nEnter the Number which file you want to perform Operation");
		int n = AdressUtility.integerInput();

		String openFilepath = openfile.get(n - 1).toString();
		System.out.println(openFilepath);
		bookfile.operations(openFilepath);
		

	}

	// return the open File by adding into arrayList
	public static ArrayList<File> displayOpenFiles() {
		ArrayList<File> openfile = new ArrayList<>(); // to store openm file
		int count = 0;
		String existpath =AdressUtility.getExistingpath();
		// get exist path of directory
		File file = new File(existpath);
		File[] list = file.listFiles(); // store list of Open file in File[]
		for (int i = 0; i < list.length; i++) {
			if (list[i].isFile()) {
				count++;
				String filename = getFileName(list[i]);
				System.out.println(count + " : " + filename);
				openfile.add(list[i]);
			}
		}
		return openfile;
	}

	private static String getFileName(File file) {
		String filename = file.toString();
		String splitedFilename[] = filename.split("[/]");
		int lastindex = splitedFilename.length - 1;
		return splitedFilename[lastindex];
	}

	public static void save() {

	}

	public static void saveAs(List<Person> personsList) throws JsonGenerationException, JsonMappingException, IOException  {

		System.out.println("Enter the New Name For file");
		String newName =AdressUtility.inputString();
		current_File =AdressUtility.getCurrentPath(newName);
				
		boolean createNew =  CreateNewFile( current_File);
		if (createNew) {
			System.out.println("New Address Book is Created : ");
		} else {
			System.out.println("Address Book is Present : ");
		}

		AdressUtility.writefile(current_File, personsList);
	
	}

	public static void detete() {
		ArrayList<File> list = AdressBookImplementation.displayOpenFiles();
		System.out.println("-------------------------------------------------------------------");
		System.out.println("Enter the number on Which you perform Deletion ......");
		int n = AdressUtility.integerInput();
		String selectFilepath = list.get(n - 1).toString(); // get file path which is on Particular index no.of
		File f = new File(selectFilepath);
		if (f.delete()) {
			System.out.println("AddressBook is Deleted");
		} else {
			System.out.println("Try for Again.......");
		}
	}

}


