package Com.BridgeLabz.Fellowship.Oops.AdressBook;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;

import com.Bridgelabz.oops.Inventory.Inventory;

public class AdressUtility {
	static Scanner scan=new Scanner(System.in);
	static String path = "/OopsProject/src/Com/BridgeLabz/Fellowship/Oops/AdressBook";

	public static String getExistingpath() {
		return path;
	}
	public static char inputchar() {
		char c = scan.next().charAt(0);
		return c;
	}
	// read String from KeyBoard
	public static String inputString() {
		String str = scan.next();
		return str;
	}

	public static String getCurrentPath(String new_file) {
		String newpath = AdressUtility.getExistingpath();
		String a = newpath + new_file + ".json";
		return a;

	}

	ObjectMapper objectmapper = new ObjectMapper();

	public ArrayList<Person> readfile(String openfile) throws JsonParseException, JsonMappingException, IOException
	{
		ArrayList<Person> personlist = objectmapper.readValue(new File(openfile),
				new TypeReference<ArrayList<Person>>() {
				});

		return null;

	}
public List<Person> writefile(String openfile,List<Person>persondata) throws JsonGenerationException, JsonMappingException, IOException
{
	File file=new File(openfile);
	objectmapper.defaultPrettyPrintingWriter().writeValue(file, persondata);
	System.out.println("write succesfully");
	return persondata;
}
	
}
