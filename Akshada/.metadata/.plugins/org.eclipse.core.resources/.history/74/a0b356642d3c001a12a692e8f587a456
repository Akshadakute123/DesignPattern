package Com.BridgeLabz.Fellowship.Oops.AdressBook;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class BookImplementation 
{
	

		static List<Person> personsList;// to perform read write Operation in the form of List object

		// Add New User

		public void addNewPerson(String openFilepath) {

			BookImplementation  bc = new BookImplementation();
			// Read the data from JSON File .
			personsList = AdressUtility.readfile(openFilepath);

			Person p = new Person();
			p = bc.getDataOfPerson(p); // get data of New User (New Entry)

			// Add it to Already readed data .and Pss to Write into file
			personsList.add(p);
			System.out.println("New Person is Added.....");

			personsList =AdressUtility.writefile(openFilepath, personsList); 
				
		}

		// Get Person Data
		private Person getDataOfPerson(Person person) {
			AdressBook a1=new AdressBook();
			String fname, lname, city, state, mobNo;
			int zip;
			System.out.println("First Name : ");
			fname = AdressUtility.inputString();
			System.out.println("Last name : ");
			lname = AdressUtility.inputString();
			System.out.println("City :");
			city = AdressUtility.inputString();

			System.out.println("State : ");
			state = AdressUtility.inputString();

			System.out.println("Zipcode :");
			zip = AdressUtility.integerInput();

			System.out.println("Mobile No. : ");
			mobNo = AdressUtility.inputString();

			person.setFirstName(fname);
			person.setLastName(lname);
			person.setPhone_no1(mobNo);
		person.setZip(zip);
	      a1.setCity(city);
			a1.setState(state);
			person.setAdress(a1);

			return person;
		}

		// To Edit the Person
		public void editPerson(String openFilepath) throws IOException {
			Person p = new Person();
			// To show the All Entry , User can Identify index number
			printEntry(openFilepath);

			System.out.println("Enter the Index Number :");
			int index =AdressUtility.integerInput();

			// Read the Data From JSON File in List
			personsList = AdressUtility.readfile(openFilepath);

			p = personsList.get(index - 1);
//			Person temp = p;
			System.out.println("Enter the choice what you want to Edit ...");
			System.out.println("-------------------------------------------------");
			System.out.println("1.First name\n2.Last Name\n3.City\n4.State\n5.Zipcode\n6.Mobile number");
			int ch = AdressUtility.integerInput();
			switch (ch) {
			case 1:
				System.out.println("Enter the New First Name");
				p.setFirstName(AdressUtility.inputString());
				break;
			case 2:
				System.out.println("Enter the New Last Name");
				p.setLastName(AdressUtility.inputString());
				break;
			case 3:
				System.out.println("Enter the New City");
				p.getAdress().setCity(AdressUtility.inputString());
				break;
			case 4:
				System.out.println("Enter the New State");
				p.getAdress().setState(AdressUtility.inputString());
				break;
			case 5:
				System.out.println("Enter the New Zipcode");
				p.setZip(AdressUtility.integerInput());
				break;
			case 6:
				System.out.println("Enter the New Mobile Number");
				p.setFirstName(AdressUtility.inputString());
				
				break;
			default:
				System.out.println("Enter Valid Choice");
			}
			System.out.println("---------------------------------------------------------");
			personsList.set(index - 1, p);

			System.out.println("Enter the choice : ");
			System.out.println("1. Save \n 2. Save As ");
			int ch1 = AdressUtility.integerInput();
			switch (ch1) {
			case 1:
				AdressUtility.writefile(openFilepath, personsList);
				
				System.out.println("Person Info Replace SuccessFully");
				break;
			case 2:
				AdressBookImplementation.saveAs(personsList);

			}

		}

		public void deletPerson(String openFilepath) {
			// To show the All Entry , User can Identify index number
			printEntry(openFilepath);

			System.out.println("Enter the Index Number :");
			int index = AdressUtility.integerInput();

			// Read the Data From JSON File in List
			personsList = AdressUtility.readfile(openFilepath);
					//Utility.readFromBook(openFilepath);

			personsList.remove(index - 1);
AdressUtility.writefile(openFilepath, personsList);
			

			System.out.println("Information get Removed");
			printEntry(openFilepath);

		}

		@SuppressWarnings("null")
		public void sortEntryByName(String openFilepath) {
			List<Person> tempSort = new ArrayList<Person>();

			personsList =AdressUtility.readfile(openFilepath); 
				

			ArrayList<String> sortedByName = sortAllName(personsList); // We will get Sortd data with name
			for (String s : sortedByName) {
				for (Person p : personsList) {
					if (s.equalsIgnoreCase(p.getFirstName())) {
						tempSort.add(p);
					}
				}
			}

			// Now All List sort ,so write to JSON File
			AdressUtility.writefile(openFilepath, tempSort);
			//Utility.writetoBook(openFilepath, tempSort);
			printEntry(openFilepath);
		}

		// To sort the name in json File Object
		private ArrayList<String> sortAllName(List<Person> personsList) {
			ArrayList<String> sort = new ArrayList<>();
			for (Person p : personsList) {
				sort.add(p.getFirstName().toLowerCase());
			}
			Collections.sort(sort);
			return sort;
		}

		// To Sort the JSON File Data base on Zipcode
		public void sortEntryByZip(String openFilepath) {
			List<Person> tempSort = new ArrayList<Person>();
			personsList = AdressUtility.readfile(openFilepath); // read fisrt
			ArrayList<Integer> sortedByZip = sortAllZip(personsList);
			for (Integer i : sortedByZip) {
				for (Person p : personsList) {
					if (i == p.getZip()) {
						tempSort.add(p); // Add the P object to get sort all data
					}
				}
			}
AdressUtility.writefile(openFilepath, tempSort);
		// Write Sorted list to JSON File
			printEntry(openFilepath); // Print data

		}

		// To Sort All ZipCode
		private ArrayList<Integer> sortAllZip(List<Person> personsList) {
			ArrayList<Integer> sort = new ArrayList<>();
			for (Person p : personsList) {
				sort.add(p.getZip());
			}
			Collections.sort(sort);
			return sort;
		}

		public void printEntry(String openFilepath) {
			personsList =AdressUtility.readfile(openFilepath);
			System.out.println("SR no\tFirst name\tLast name\tcity\t\tstate\t\tzipcode\t\tmobile no.");
			System.out.println(
					"_______________________________________________________________________________________________________");
			int srno = 0;
			for (Person p : personsList) {
				srno++;
				System.out.println(srno + "\t" + p.getFirstName() + "\t\t" + p.getFirstName() + "\t\t" + p.getAdress().getCity()
						+ "\t\t" + p.getAdress().getState() + "\t\t" + p.getZip() + "\t\t" + p.getPhone_no1());
				System.out.println(
						"---------------------------------------------------------------------------------------------------------");
			}
		
